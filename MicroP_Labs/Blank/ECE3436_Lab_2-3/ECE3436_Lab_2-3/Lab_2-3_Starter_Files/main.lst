


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ;ECE3436 Fall 2017
    3 00000000         ;Lab 2+3
    4 00000000         ; Program written by: Put your name here or this looks s
                       illy
    5 00000000         
    6 00000000         ; Brief description of the program
    7 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    8 00000000         ; Hardware connections (External: One button and one LED
                       )
    9 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
   10 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   11 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   12 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   13 00000000         ; Overall functionality of this system is to operate lik
                       e this
   14 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   15 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   16 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   17 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   18 00000000         ;      and OFF for (0.8*1/8)th of a second.
   19 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   20 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   21 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   22 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   23 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   24 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   25 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   26 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   27 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   28 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   29 00000000         ;         cycle or reset to 20%.
   30 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   31 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   32 00000000         ; PortE device registers
   33 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   34 00000000 40024400 
                       GPIO_PORTE_DIR_R



ARM Macro Assembler    Page 2 


                               EQU              0x40024400
   35 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   36 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   37 00000000         ; PortF device registers
   38 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   39 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   40 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   41 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   42 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   43 00000000         
   44 00000000                 IMPORT           PLL_Init
   45 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   46 00000000                 THUMB
   47 00000000                 EXPORT           Start
   48 00000000         
   49 00000000         Start
   50 00000000         ;BL PLL_Init
   51 00000000 F04F 0002       MOV              R0, #2
   52 00000004         loop
   53 00000004         
   54 00000004         ;MOV R0, #1
   55 00000004 F1A0 0001       SUB              R0, #1
   56 00000008 D0FE            BEQ              Start
   57 0000000A         
   58 0000000A E7FB            B                loop
   59 0000000C         
   60 0000000C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   61 0000000C                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 49 in file main.s
   Uses
      At line 47 in file main.s
      At line 56 in file main.s

loop 00000004

Symbol: loop
   Definitions
      At line 52 in file main.s
   Uses
      At line 58 in file main.s
Comment: loop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: GPIO_PORTE_DATA_R unused
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: GPIO_PORTE_DEN_R unused
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: GPIO_PORTE_DIR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DEN_R unused
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 39 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DIR_R unused
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: GPIO_PORTF_PUR_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: SYSCTL_RCGCGPIO_R unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: PLL_Init unused
1 symbol
345 symbols in table
