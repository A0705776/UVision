


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Alamin Ahmed & Tu Tran***
    3 00000000         ; Date Created: 6/22/2017
    4 00000000         ; Last Modified: 6/22/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         
   31 00000000         ;    \\ 
   32 00000000         ;    (o>
   33 00000000         ; \\_//)
   34 00000000         ;   \_/_)
   35 00000000         ;   _|_
   36 00000000         
   37 00000000         ;-------------------------------------------------------
                       --------- Definition -----------------------------------
                       ----------------------------
   38 00000000         ; PortE device registers 



ARM Macro Assembler    Page 2 


   39 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   40 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   41 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   42 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   43 00000000         ; PortF device registers
   44 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   45 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   46 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   47 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   48 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   49 00000000         ;peripheral clock registers
   50 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   51 00000000         ;address for the pins PE0, PE1, and PF4
   52 00000000         ;can be used instead of ..._DATA_R, this way we don't ha
                       ve to mask to specific pin
   53 00000000 40024004 
                       PE0     EQU              0x40024004
   54 00000000 40024008 
                       PE1     EQU              0x40024008  ;0x02
   55 00000000 40025040 
                       PF4     EQU              0x40025040
   56 00000000         ;-------------------------------------------------------
                       ----- End of Definition --------------------------------
                       ---------------------------
   57 00000000                 THUMB                        ;using THUMB assemb
                                                            ly instruction set
   58 00000000         
   59 00000000                 IMPORT           PLL_Init    ;From MCU_Clock to 
                                                            setup 80MHz process
                                                            or clock 
   60 00000000                 IMPORT           Delay_10us  ;From SysTick to de
                                                            lay 10us
   61 00000000                 IMPORT           SysTick_Init ;From SysTick to i
                                                            nitialize Ticks for
                                                             Delay
   62 00000000                 IMPORT           Delay_1250ns ;From SysTick to d
                                                            elay 1250ns
   63 00000000         
   64 00000000                 AREA             DATA,ALIGN=2



ARM Macro Assembler    Page 3 


   65 00000000         
   66 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            50          ;Storing the PE1 (t
                                                            he button) and the 
                                                            PE0 (LED) state for
                                                             debugging 
   67 00000032 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            4*50        ;Storing the time s
                                                            tamp of each state 
                                                            for debugging 
   68 000000FA 00 00 00 
              00       DataPt  SPACE            4           ;DataBuffer pointer
                                                             for the 8 bit arra
                                                            y
   69 000000FE 00 00 00 
              00       TimePt  SPACE            4           ;TimeBuffer pointer
                                                             for the 32 bit arr
                                                            ay
   70 00000102         
   71 00000102 00      LedOnTime
                               SPACE            1           ;Store the LedOnTim
                                                            e (8 bit) in the RA
                                                            M
   72 00000103 00      LedOffTime
                               SPACE            1           ;Store the LedOffTi
                                                            me (8 bit) in the R
                                                            AM
   73 00000104         
   74 00000104                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   75 00000000         
   76 00000000                 EXPORT           Start
   77 00000000         
   78 00000000         ;-------------------------------------------------------
                       ----------- Start --------------------------------------
                       ----------------------------



ARM Macro Assembler    Page 5 


   79 00000000         Start
   80 00000000 F000 F80F       BL               Debug_Init
   81 00000004 F7FF FFFE       BL               PLL_Init    ;Setup the system c
                                                            lock
   82 00000008 F7FF FFFE       BL               SysTick_Init ;Setup the Delay F
                                                            unction
   83 0000000C F000 F888       BL               init        ;Initialize all the
                                                             pins
   84 00000010 F000 F87D       BL               init_variables ;Initialize glob
                                                            al variables
   85 00000014         ;-------------------------------------------------------
                       ----------- Loop ---------------------------------------
                       ----------------------------
   86 00000014         loop
   87 00000014 F000 F816       BL               check_pin_F4 ;Check to see if t
                                                            he button SW1 was p
                                                            ressed, If yes then
                                                             implement Breath
   88 00000018 F000 F85F       BL               check_pin_E1 ;Check to see if t
                                                            he button on PE1 wa
                                                            s pressed
   89 0000001C F000 F835       BL               blink_8Hz   ;Blink LED at 8Hz  
                                                            
   90 00000020 E7F8            B                loop        ;Infinite loop
   91 00000022         ;-------------------------------------------------------
                       ------- End of Loop ------------------------------------
                       ----------------------------
   92 00000022         
   93 00000022         ;-------------------------------------------------------
                       -------- Debug_Init ------------------------------------
                       ----------------------------
   94 00000022         Debug_Init
   95 00000022 4A52            LDR              R2,=DataBuffer 
                                                            ;R1 = &DataBuffer
   96 00000024 4B52            LDR              R3,=TimeBuffer
   97 00000026 4951            LDR              R1,=DataBuffer
   98 00000028 F101 0132       ADD              R1,#50
   99 0000002C         Debug_Init_loop
  100 0000002C F04F 00FF       MOV              R0,#0xFF
  101 00000030 7010            STRB             R0,[R2]
  102 00000032 F102 0201       ADD              R2,#1
  103 00000036 F04F 30EE       MOV              R0,#0xEEEEEEEE
  104 0000003A 6018            STR              R0,[R3]
  105 0000003C F103 0304       ADD              R3,#4
  106 00000040 428B            CMP              R3, R1
  107 00000042 D3F3            BLO              Debug_Init_loop
  108 00000044         
  109 00000044         
  110 00000044         ;-------------------------------------------------------
                       ---- End of Debug_Init ---------------------------------
                       ----------------------------
  111 00000044         
  112 00000044         ;-------------------------------------------------------
                       ------- check_pin_F4 -----------------------------------
                       ----------------------------
  113 00000044         check_pin_F4
  114 00000044 B500            PUSH             {LR}        ;Save the LR
  115 00000046 F44F 7216       MOV              R2, #600    ;R2 = 600, running 
                                                            at 166.66 Hz



ARM Macro Assembler    Page 6 


  116 0000004A 4613            MOV              R3, R2      ;R3 = R2
  117 0000004C         check_btn
  118 0000004C 4949            LDR              R1, =PF4    ;R1 = &PF4
  119 0000004E 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by R1
  120 00000050 2800            CMP              R0, #0      ;Check to see if th
                                                            e pin is HIGH
  121 00000052 D000            BEQ              start_breath ;If LOW then go to
                                                             start_breath 
  122 00000054         ;End 
  123 00000054 BD00            POP              {PC}        ;Restore LR to PC, 
                                                            act as BX LR
  124 00000056         start_breath
  125 00000056 4618            MOV              R0, R3      ;R0 = R3, for the d
                                                            elay function
  126 00000058 F7FF FFFE       BL               Delay_10us  ;Delay R0*10us
  127 0000005C F000 F851       BL               toggle_led  ;turn on/off the LE
                                                            D
  128 00000060 F5C3 7016       RSB              R0, R3, #600 ;Reverse Subtract,
                                                             R0 = 600 - R3
  129 00000064 F7FF FFFE       BL               Delay_10us  ;Delay R0*10us
  130 00000068 F000 F84B       BL               toggle_led  ;turn on/off the LE
                                                            D
  131 0000006C 2A00            CMP              R2, #0      ;compare R2 with 0
  132 0000006E D806            BHI              breath_down ;If higher than 0 t
                                                            hen go to breath_do
                                                            wn
  133 00000070 F5B3 7F16       CMP              R3, #600    ;compare R3 with 60
                                                            0
  134 00000074 D307            BLO              breath_up   ;If less than 30 th
                                                            en go to breath_up
  135 00000076         ;Reset  
  136 00000076 F44F 7216       MOV              R2, #600    ;R2 = 600
  137 0000007A 4613            MOV              R3, R2      ;R3 = R2
  138 0000007C E7E6            B                check_btn   ;Go Back to check t
                                                            he button
  139 0000007E         breath_down
  140 0000007E F1A2 0201       SUB              R2, #1      ;R2 = R2 - 1
  141 00000082 4613            MOV              R3, R2      ;R3 = R2
  142 00000084 E7E2            B                check_btn   ;Go Back to check t
                                                            he button
  143 00000086         breath_up
  144 00000086 3301            ADDS             R3, #1      ;R3 = R3 + 1
  145 00000088 E7E0            B                check_btn   ;Go Back to check t
                                                            he button
  146 0000008A         ;-------------------------------------------------------
                       --- End of check_pin_F4 --------------------------------
                       ----------------------------
  147 0000008A         
  148 0000008A         ;-------------------------------------------------------
                       -------- blink_8Hz -------------------------------------
                       ----------------------------
  149 0000008A         ;Each paulse takes 125ms
  150 0000008A         blink_8Hz
  151 0000008A B500            PUSH             {LR}        ;Save the LR
  152 0000008C F000 F82D       BL               led_on      ;Turn on the LED
  153 00000090 4939            LDR              R1, =LedOnTime ;R1 = &LedOnTime
                                                            



ARM Macro Assembler    Page 7 


  154 00000092 7808            LDRB             R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by R1, B for 8 bit
                                                            
  155 00000094 F7FF FFFE       BL               Delay_1250ns ;Delay (R0*1250)ns
                                                            
  156 00000098 F000 F82D       BL               led_off     ;Turn off the LED
  157 0000009C 4937            LDR              R1, =LedOffTime 
                                                            ;R1 = &LedOffTime
  158 0000009E 7808            LDRB             R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by R1, B for 8 bit
                                                            
  159 000000A0 F7FF FFFE       BL               Delay_1250ns ;Delay (R0*1250)ns
                                                            
  160 000000A4         ;End 
  161 000000A4 BD00            POP              {PC}        ;Restore LR to PC, 
                                                            act as BX LR
  162 000000A6         ;  BX LR       ;Go Back
  163 000000A6         ;-------------------------------------------------------
                       ----- End of blink_8Hz ---------------------------------
                       ----------------------------
  164 000000A6         
  165 000000A6         ;-------------------------------------------------------
                       -------- switch_duty -----------------------------------
                       ----------------------------
  166 000000A6         switch_duty
  167 000000A6 F644 6020       MOV              R0, #20000  ;R0 = 20000
  168 000000AA F7FF FFFE       BL               Delay_10us  ;Debounch Delay 200
                                                            00*10us = 200ms
  169 000000AE 4932            LDR              R1, =LedOnTime ;R1 = &LedOnTime
                                                            
  170 000000B0 7808            LDRB             R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by R1, B for 8 bit
                                                            
  171 000000B2 2864            CMP              R0, #100    ;Check to see if R0
                                                             = 100
  172 000000B4 D008            BEQ              reset_duty  ;If equal then go t
                                                            o reset_duty
  173 000000B6 F100 0014       ADD              R0, #20     ;R0 = R0 + 20
  174 000000BA 7008            STRB             R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1, B for 8 bit  
  175 000000BC 492F            LDR              R1, =LedOffTime 
                                                            ;R1 = &LedOffTime
  176 000000BE 7808            LDRB             R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by R1, B for 8 bit
                                                            
  177 000000C0 F1A0 0014       SUB              R0, #20     ;R0 = R0 - 20
  178 000000C4 7008            STRB             R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1, B for 8 bit 
  179 000000C6 E00F            B                End_check_pin_E1 ;Go Back to ch
                                                            eck_pin_E1
  180 000000C8         ;-------------------------------------------------------
                       --- End of switch_duty ---------------------------------
                       ---------------------------



ARM Macro Assembler    Page 8 


  181 000000C8         
  182 000000C8         ;-------------------------------------------------------
                       ------- reset_duty -------------------------------------
                       ---------------------------
  183 000000C8         reset_duty
  184 000000C8 492B            LDR              R1, =LedOnTime ;R1 = &LedOnTime
                                                            
  185 000000CA F04F 0000       MOV              R0, #0      ;R0 = 1
  186 000000CE 7008            STRB             R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1, B for 8 bit
  187 000000D0 492A            LDR              R1, =LedOffTime 
                                                            ;R1 = &LedOffTime
  188 000000D2 F04F 0064       MOV              R0, #100    ;R0 = 1
  189 000000D6 7008            STRB             R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1, B for 8 bit 
  190 000000D8 E006            B                End_check_pin_E1 ;Go Back to ch
                                                            eck_pin_E1
  191 000000DA         ;-------------------------------------------------------
                       ---- End of reset_duty ---------------------------------
                       ----------------------------
  192 000000DA         
  193 000000DA         ;-------------------------------------------------------
                       ------- check_pin_E1 -----------------------------------
                       ----------------------------
  194 000000DA         check_pin_E1
  195 000000DA B500            PUSH             {LR}        ;Save the LR
  196 000000DC 4928            LDR              R1, =GPIO_PORTE_DATA_R ;R1 = &G
                                                            PIO_PORTE_DATA_R
  197 000000DE 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by SYSCTL_RCGCGPIO
                                                            _R
  198 000000E0 F000 0002       AND              R0, R0, #0x02 ;Mask bit 2 for p
                                                            in E1
  199 000000E4 2802            CMP              R0, #0x02   ;Check to see if th
                                                            e pin is HIGH
  200 000000E6 D0DE            BEQ              switch_duty ;If HIGH then go to
                                                             switch_state 
  201 000000E8         End_check_pin_E1
  202 000000E8 BD00            POP              {PC}        ;Restore LR to PC, 
                                                            act as BX LR
  203 000000EA         ;  BX LR       ;Go Back
  204 000000EA         ;-------------------------------------------------------
                       --- End of check_pin_E1 --------------------------------
                       ----------------------------
  205 000000EA         
  206 000000EA         ;-------------------------------------------------------
                       --------- led_on ---------------------------------------
                       ----------------------------
  207 000000EA         led_on
  208 000000EA 4925            LDR              R1, =GPIO_PORTE_DATA_R ;R1 = &G
                                                            PIO_PORTE_DATA_R
  209 000000EC 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by SYSCTL_RCGCGPIO
                                                            _R
  210 000000EE F040 0001       ORR              R0, R0, #0x01 ;Set bit 1 for pi



ARM Macro Assembler    Page 9 


                                                            n E0
  211 000000F2 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  212 000000F4         ;End 
  213 000000F4 4770            BX               LR          ;Go Back
  214 000000F6         ;-------------------------------------------------------
                       ------ End of led_on -----------------------------------
                       ----------------------------
  215 000000F6         
  216 000000F6         ;-------------------------------------------------------
                       --------- led_off --------------------------------------
                       ----------------------------
  217 000000F6         led_off
  218 000000F6 4922            LDR              R1, =GPIO_PORTE_DATA_R ;R1 = &G
                                                            PIO_PORTE_DATA_R
  219 000000F8 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by SYSCTL_RCGCGPIO
                                                            _R
  220 000000FA F020 0001       AND              R0, R0, #~0x01 ;Reset bit 1 for
                                                             pin E0
  221 000000FE 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  222 00000100         ;End 
  223 00000100 4770            BX               LR          ;Go Back
  224 00000102         ;-------------------------------------------------------
                       ----- End of led_off -----------------------------------
                       ----------------------------
  225 00000102         
  226 00000102         ;-------------------------------------------------------
                       -------- toggle_led ------------------------------------
                       ----------------------------
  227 00000102         toggle_led
  228 00000102 491F            LDR              R1, =GPIO_PORTE_DATA_R ;R1 = &G
                                                            PIO_PORTE_DATA_R
  229 00000104 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by SYSCTL_RCGCGPIO
                                                            _R
  230 00000106 F080 0001       EOR              R0, R0, #0x01 ;Toggle bit 1 for
                                                             pin E0
  231 0000010A 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  232 0000010C         ;End 
  233 0000010C 4770            BX               LR          ;Go Back
  234 0000010E         ;-------------------------------------------------------
                       ---- End of toggle_led ---------------------------------
                       ----------------------------
  235 0000010E         
  236 0000010E         ;-------------------------------------------------------
                       ------ init_variables ----------------------------------
                       ----------------------------
  237 0000010E         init_variables
  238 0000010E 491A            LDR              R1, =LedOnTime ;R1 = &LedOnTime
                                                            
  239 00000110 F04F 0014       MOV              R0, #20     ;R0 = 1



ARM Macro Assembler    Page 10 


  240 00000114 7008            STRB             R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1, B for 8 bit
  241 00000116 4919            LDR              R1, =LedOffTime 
                                                            ;R1 = &LedOffTime
  242 00000118 F04F 0050       MOV              R0, #80     ;R0 = 1
  243 0000011C 7008            STRB             R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1, B for 8 bit
  244 0000011E         ;End 
  245 0000011E 4770            BX               LR          ;Go Back
  246 00000120         ;-------------------------------------------------------
                       -- End of init_variables -------------------------------
                       ----------------------------
  247 00000120         
  248 00000120         ;-------------------------------------------------------
                       ---------- init ----------------------------------------
                       ----------------------------
  249 00000120         init
  250 00000120         ;PortF_and_E_Clock      ;Activate clock for Port F and E
                       
  251 00000120 4918            LDR              R1, =SYSCTL_RCGCGPIO_R ;R1 = &S
                                                            YSCTL_RCGCGPIO_R
  252 00000122 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by SYSCTL_RCGCGPIO
                                                            _R
  253 00000124 F040 0030       ORR              R0, R0, #0x30 ;Set bit 5 (for F
                                                            ) and bit 4 (for E)
                                                             to turn on the clo
                                                            ck
  254 00000128 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  255 0000012A BF00            NOP                          ;no operation (1 cl
                                                            ock cycle), requre 
                                                            2 clock cycle to fi
                                                            nish setting up
  256 0000012C BF00            NOP                          ;no operation (1 cl
                                                            ock cycle)
  257 0000012E BF00            NOP
  258 00000130 BF00            NOP
  259 00000132         
  260 00000132         ;PortF4_DIR_setup      ;Activate pin F4 as Input
  261 00000132 4915            LDR              R1, =GPIO_PORTF_DIR_R ;R1 = &GP
                                                            IO_PORTF_DIR_R
  262 00000134 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by GPIO_PORTF_DIR_
                                                            R
  263 00000136 F020 0010       AND              R0, R0, #~0x10 ;Set bit 4 (for 
                                                            F4), 0 means input 
                                                            1 means output (thi
                                                            s ensure only bit 4
                                                             changes)
  264 0000013A 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  265 0000013C         



ARM Macro Assembler    Page 11 


  266 0000013C         ;PortF4_PUR_setup      ;Add pull-up configuration on F4
  267 0000013C 4913            LDR              R1, =GPIO_PORTF_PUR_R ;R1 = &GP
                                                            IO_PORTF_PUR_R
  268 0000013E 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by GPIO_PORTF_PUR_
                                                            R
  269 00000140 F040 0010       ORR              R0, R0, #0x10 ;Set bit 4 (for F
                                                            4),1 means pull-up 
                                                            0 means none (this 
                                                            ensure only bit 4 c
                                                            hanges)
  270 00000144 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  271 00000146         
  272 00000146         ;PortF4_DEN_setup      ;Enable F4
  273 00000146 4912            LDR              R1, =GPIO_PORTF_DEN_R ;R1 = &GP
                                                            IO_PORTF_DEN_R
  274 00000148 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by GPIO_PORTF_DEN_
                                                            R
  275 0000014A F040 0010       ORR              R0, R0, #0x10 ;set bit 4 (for F
                                                            4),1 means enable 0
                                                             means disable (thi
                                                            s ensure only bit 4
                                                             changes)
  276 0000014E 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  277 00000150         
  278 00000150         ;PortE0_and_E1_DIR_setup    ;Activate pin E0 Output (LED
                       ) and E1 as Input
  279 00000150 4910            LDR              R1, =GPIO_PORTE_DIR_R ;R1 = &GP
                                                            IO_PORTE_DIR_R
  280 00000152 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed
                                                             by GPIO_PORTE_DIR_
                                                            R
  281 00000154 F020 0002       AND              R0, R0, #~0x02 ;Set bit 1 (for 
                                                            E1), 0 means input 
                                                            1 means output (thi
                                                            s ensure only bit 1
                                                             changes)
  282 00000158 F040 0001       ORR              R0, R0, #0x01 ;Set bit 0 (for E
                                                            0),0 means input 1 
                                                            means output (this 
                                                            ensure only bit 0 c
                                                            hanges)
  283 0000015C 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  284 0000015E         
  285 0000015E         ;PortE0_and_E1_DEN_setup    ;Enable E0 and E1
  286 0000015E 490E            LDR              R1, =GPIO_PORTE_DEN_R ;R1 = &GP
                                                            IO_PORTE_DEN_R
  287 00000160 6808            LDR              R0, [R1]    ;R0 = the value of 
                                                            the address pointed



ARM Macro Assembler    Page 12 


                                                             by GPIO_PORTE_DEN_
                                                            R
  288 00000162 F040 0003       ORR              R0, R0, #0x03 ;Set bit 0 and 1 
                                                            (for E0 and E1),1 m
                                                            eans enable 0 means
                                                             disable (this ensu
                                                            re only bit 0 and 1
                                                             changes)
  289 00000166 6008            STR              R0, [R1]    ;Store Value of R0 
                                                            into the address of
                                                             R1
  290 00000168         ;End 
  291 00000168 4770            BX               LR          ;Go Back
  292 0000016A         ;-------------------------------------------------------
                       ----------- End of init --------------------------------
                       ------------------------------
  293 0000016A         
  294 0000016A 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  295 0000016C                 END                          ; end of file
              00000000 
              00000000 
              40025040 
              00000000 
              00000000 
              400243FC 
              400FE608 
              40025400 
              40025510 
              4002551C 
              40024400 
              4002451C 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\mai
n.d -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM
\Inc\TI\TM4C123 --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 64 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 66 in file main.s
   Uses
      At line 95 in file main.s
      At line 97 in file main.s

DataPt 000000FA

Symbol: DataPt
   Definitions
      At line 68 in file main.s
   Uses
      None
Comment: DataPt unused
LedOffTime 00000103

Symbol: LedOffTime
   Definitions
      At line 72 in file main.s
   Uses
      At line 157 in file main.s
      At line 175 in file main.s
      At line 187 in file main.s
      At line 241 in file main.s

LedOnTime 00000102

Symbol: LedOnTime
   Definitions
      At line 71 in file main.s
   Uses
      At line 153 in file main.s
      At line 169 in file main.s
      At line 184 in file main.s
      At line 238 in file main.s

TimeBuffer 00000032

Symbol: TimeBuffer
   Definitions
      At line 67 in file main.s
   Uses
      At line 96 in file main.s
Comment: TimeBuffer used once
TimePt 000000FE

Symbol: TimePt
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 69 in file main.s
   Uses
      None
Comment: TimePt unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: .text unused
Debug_Init 00000022

Symbol: Debug_Init
   Definitions
      At line 94 in file main.s
   Uses
      At line 80 in file main.s
Comment: Debug_Init used once
Debug_Init_loop 0000002C

Symbol: Debug_Init_loop
   Definitions
      At line 99 in file main.s
   Uses
      At line 107 in file main.s
Comment: Debug_Init_loop used once
End_check_pin_E1 000000E8

Symbol: End_check_pin_E1
   Definitions
      At line 201 in file main.s
   Uses
      At line 179 in file main.s
      At line 190 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 79 in file main.s
   Uses
      At line 76 in file main.s
Comment: Start used once
blink_8Hz 0000008A

Symbol: blink_8Hz
   Definitions
      At line 150 in file main.s
   Uses
      At line 89 in file main.s
Comment: blink_8Hz used once
breath_down 0000007E

Symbol: breath_down
   Definitions
      At line 139 in file main.s
   Uses
      At line 132 in file main.s
Comment: breath_down used once
breath_up 00000086




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: breath_up
   Definitions
      At line 143 in file main.s
   Uses
      At line 134 in file main.s
Comment: breath_up used once
check_btn 0000004C

Symbol: check_btn
   Definitions
      At line 117 in file main.s
   Uses
      At line 138 in file main.s
      At line 142 in file main.s
      At line 145 in file main.s

check_pin_E1 000000DA

Symbol: check_pin_E1
   Definitions
      At line 194 in file main.s
   Uses
      At line 88 in file main.s
Comment: check_pin_E1 used once
check_pin_F4 00000044

Symbol: check_pin_F4
   Definitions
      At line 113 in file main.s
   Uses
      At line 87 in file main.s
Comment: check_pin_F4 used once
init 00000120

Symbol: init
   Definitions
      At line 249 in file main.s
   Uses
      At line 83 in file main.s
Comment: init used once
init_variables 0000010E

Symbol: init_variables
   Definitions
      At line 237 in file main.s
   Uses
      At line 84 in file main.s
Comment: init_variables used once
led_off 000000F6

Symbol: led_off
   Definitions
      At line 217 in file main.s
   Uses
      At line 156 in file main.s
Comment: led_off used once
led_on 000000EA

Symbol: led_on



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 207 in file main.s
   Uses
      At line 152 in file main.s
Comment: led_on used once
loop 00000014

Symbol: loop
   Definitions
      At line 86 in file main.s
   Uses
      At line 90 in file main.s
Comment: loop used once
reset_duty 000000C8

Symbol: reset_duty
   Definitions
      At line 183 in file main.s
   Uses
      At line 172 in file main.s
Comment: reset_duty used once
start_breath 00000056

Symbol: start_breath
   Definitions
      At line 124 in file main.s
   Uses
      At line 121 in file main.s
Comment: start_breath used once
switch_duty 000000A6

Symbol: switch_duty
   Definitions
      At line 166 in file main.s
   Uses
      At line 200 in file main.s
Comment: switch_duty used once
toggle_led 00000102

Symbol: toggle_led
   Definitions
      At line 227 in file main.s
   Uses
      At line 127 in file main.s
      At line 130 in file main.s

20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 196 in file main.s
      At line 208 in file main.s
      At line 218 in file main.s
      At line 228 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 286 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 279 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 48 in file main.s
   Uses
      At line 273 in file main.s
Comment: GPIO_PORTF_DEN_R used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 45 in file main.s
   Uses
      At line 261 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 47 in file main.s
   Uses
      At line 267 in file main.s
Comment: GPIO_PORTF_PUR_R used once
PE0 40024004

Symbol: PE0
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: PE0 unused
PE1 40024008

Symbol: PE1
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: PE1 unused
PF4 40025040

Symbol: PF4
   Definitions
      At line 55 in file main.s
   Uses
      At line 118 in file main.s
Comment: PF4 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 50 in file main.s
   Uses
      At line 251 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Delay_10us 00000000

Symbol: Delay_10us
   Definitions
      At line 60 in file main.s
   Uses
      At line 126 in file main.s
      At line 129 in file main.s
      At line 168 in file main.s

Delay_1250ns 00000000

Symbol: Delay_1250ns
   Definitions
      At line 62 in file main.s
   Uses
      At line 155 in file main.s
      At line 159 in file main.s

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 59 in file main.s
   Uses
      At line 81 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 82 in file main.s
Comment: SysTick_Init used once
4 symbols
378 symbols in table
